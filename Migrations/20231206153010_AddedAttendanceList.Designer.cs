// <auto-generated />
using System;
using InzynierkaApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InzynierkaApi.Migrations
{
    [DbContext(typeof(AttendanceContext))]
    [Migration("20231206153010_AddedAttendanceList")]
    partial class AddedAttendanceList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("InzynierkaApi.Models.AttendanceModel", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("AttendanceList");
                });

            modelBuilder.Entity("InzynierkaApi.Models.CourseModel", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfClass")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameOfClass")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudentsId")
                        .HasColumnType("longtext");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            DateOfClass = new DateTime(2023, 12, 7, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(8996),
                            NameOfClass = "Class1",
                            StudentsId = "[1,2,3]",
                            TeacherId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            DateOfClass = new DateTime(2023, 12, 8, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9060),
                            NameOfClass = "Class2",
                            StudentsId = "[2,3,4]",
                            TeacherId = 2
                        },
                        new
                        {
                            CourseId = 3,
                            DateOfClass = new DateTime(2023, 12, 9, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9077),
                            NameOfClass = "Class3",
                            StudentsId = "[3,4,5]",
                            TeacherId = 3
                        },
                        new
                        {
                            CourseId = 4,
                            DateOfClass = new DateTime(2023, 12, 10, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9092),
                            NameOfClass = "Class4",
                            StudentsId = "[4,5,6]",
                            TeacherId = 4
                        },
                        new
                        {
                            CourseId = 5,
                            DateOfClass = new DateTime(2023, 12, 11, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9107),
                            NameOfClass = "Class5",
                            StudentsId = "[5,6,7]",
                            TeacherId = 5
                        },
                        new
                        {
                            CourseId = 6,
                            DateOfClass = new DateTime(2023, 12, 12, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9124),
                            NameOfClass = "Class6",
                            StudentsId = "[6,7,8]",
                            TeacherId = 6
                        },
                        new
                        {
                            CourseId = 7,
                            DateOfClass = new DateTime(2023, 12, 13, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9139),
                            NameOfClass = "Class7",
                            StudentsId = "[7,8,9]",
                            TeacherId = 7
                        },
                        new
                        {
                            CourseId = 8,
                            DateOfClass = new DateTime(2023, 12, 14, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9155),
                            NameOfClass = "Class8",
                            StudentsId = "[8,9,10]",
                            TeacherId = 8
                        },
                        new
                        {
                            CourseId = 9,
                            DateOfClass = new DateTime(2023, 12, 15, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9170),
                            NameOfClass = "Class9",
                            StudentsId = "[9,10,11]",
                            TeacherId = 9
                        },
                        new
                        {
                            CourseId = 10,
                            DateOfClass = new DateTime(2023, 12, 16, 16, 30, 10, 441, DateTimeKind.Local).AddTicks(9188),
                            NameOfClass = "Class10",
                            StudentsId = "[10,11,12]",
                            TeacherId = 10
                        });
                });

            modelBuilder.Entity("InzynierkaApi.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("CourseId")
                        .HasColumnType("longtext");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            AlbumId = 1001,
                            CourseId = "[1,2,3]",
                            Department = "Department1",
                            FieldOfStudy = "Field1",
                            FirstName = "StudentFirstName1",
                            LastName = "StudentLastName1"
                        },
                        new
                        {
                            StudentId = 2,
                            AlbumId = 1002,
                            CourseId = "[2,3,4]",
                            Department = "Department2",
                            FieldOfStudy = "Field2",
                            FirstName = "StudentFirstName2",
                            LastName = "StudentLastName2"
                        },
                        new
                        {
                            StudentId = 3,
                            AlbumId = 1003,
                            CourseId = "[3,4,5]",
                            Department = "Department3",
                            FieldOfStudy = "Field3",
                            FirstName = "StudentFirstName3",
                            LastName = "StudentLastName3"
                        },
                        new
                        {
                            StudentId = 4,
                            AlbumId = 1004,
                            CourseId = "[4,5,6]",
                            Department = "Department4",
                            FieldOfStudy = "Field4",
                            FirstName = "StudentFirstName4",
                            LastName = "StudentLastName4"
                        },
                        new
                        {
                            StudentId = 5,
                            AlbumId = 1005,
                            CourseId = "[5,6,7]",
                            Department = "Department5",
                            FieldOfStudy = "Field5",
                            FirstName = "StudentFirstName5",
                            LastName = "StudentLastName5"
                        },
                        new
                        {
                            StudentId = 6,
                            AlbumId = 1006,
                            CourseId = "[6,7,8]",
                            Department = "Department6",
                            FieldOfStudy = "Field6",
                            FirstName = "StudentFirstName6",
                            LastName = "StudentLastName6"
                        },
                        new
                        {
                            StudentId = 7,
                            AlbumId = 1007,
                            CourseId = "[7,8,9]",
                            Department = "Department7",
                            FieldOfStudy = "Field7",
                            FirstName = "StudentFirstName7",
                            LastName = "StudentLastName7"
                        },
                        new
                        {
                            StudentId = 8,
                            AlbumId = 1008,
                            CourseId = "[8,9,10]",
                            Department = "Department8",
                            FieldOfStudy = "Field8",
                            FirstName = "StudentFirstName8",
                            LastName = "StudentLastName8"
                        },
                        new
                        {
                            StudentId = 9,
                            AlbumId = 1009,
                            CourseId = "[9,10,11]",
                            Department = "Department9",
                            FieldOfStudy = "Field9",
                            FirstName = "StudentFirstName9",
                            LastName = "StudentLastName9"
                        },
                        new
                        {
                            StudentId = 10,
                            AlbumId = 1010,
                            CourseId = "[10,11,12]",
                            Department = "Department10",
                            FieldOfStudy = "Field10",
                            FirstName = "StudentFirstName10",
                            LastName = "StudentLastName10"
                        });
                });

            modelBuilder.Entity("InzynierkaApi.Models.TeacherLoginModel", b =>
                {
                    b.Property<int>("TeacherLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TeacherLoginId");

                    b.ToTable("TeacherLogin");
                });

            modelBuilder.Entity("InzynierkaApi.Models.TeacherModel", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Department = "Department1",
                            Email = "teacher1@example.com",
                            FirstName = "TeacherFirstName1",
                            LastName = "TeacherLastName1"
                        },
                        new
                        {
                            TeacherId = 2,
                            Department = "Department2",
                            Email = "teacher2@example.com",
                            FirstName = "TeacherFirstName2",
                            LastName = "TeacherLastName2"
                        },
                        new
                        {
                            TeacherId = 3,
                            Department = "Department3",
                            Email = "teacher3@example.com",
                            FirstName = "TeacherFirstName3",
                            LastName = "TeacherLastName3"
                        },
                        new
                        {
                            TeacherId = 4,
                            Department = "Department4",
                            Email = "teacher4@example.com",
                            FirstName = "TeacherFirstName4",
                            LastName = "TeacherLastName4"
                        },
                        new
                        {
                            TeacherId = 5,
                            Department = "Department5",
                            Email = "teacher5@example.com",
                            FirstName = "TeacherFirstName5",
                            LastName = "TeacherLastName5"
                        },
                        new
                        {
                            TeacherId = 6,
                            Department = "Department6",
                            Email = "teacher6@example.com",
                            FirstName = "TeacherFirstName6",
                            LastName = "TeacherLastName6"
                        },
                        new
                        {
                            TeacherId = 7,
                            Department = "Department7",
                            Email = "teacher7@example.com",
                            FirstName = "TeacherFirstName7",
                            LastName = "TeacherLastName7"
                        },
                        new
                        {
                            TeacherId = 8,
                            Department = "Department8",
                            Email = "teacher8@example.com",
                            FirstName = "TeacherFirstName8",
                            LastName = "TeacherLastName8"
                        },
                        new
                        {
                            TeacherId = 9,
                            Department = "Department9",
                            Email = "teacher9@example.com",
                            FirstName = "TeacherFirstName9",
                            LastName = "TeacherLastName9"
                        },
                        new
                        {
                            TeacherId = 10,
                            Department = "Department10",
                            Email = "teacher10@example.com",
                            FirstName = "TeacherFirstName10",
                            LastName = "TeacherLastName10"
                        });
                });

            modelBuilder.Entity("InzynierkaApi.Models.AttendanceModel", b =>
                {
                    b.HasOne("InzynierkaApi.Models.CourseModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InzynierkaApi.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
